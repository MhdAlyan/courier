<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<!-- Copyright 2000-2009 Double Precision, Inc.  See COPYING for -->
<!-- distribution information. -->
<refentry>
  <info><author><firstname>Sam</firstname><surname>Varshavchik</surname><contrib>Author</contrib></author><productname>Courier Mail Server</productname></info>

  <refmeta>
    <refentrytitle>couriertcpd</refentrytitle>
    <manvolnum>1</manvolnum>
    <refmiscinfo>Double Precision, Inc.</refmiscinfo>
  </refmeta>

  <refnamediv>
    <refname>couriertcpd</refname>
    <refpurpose>the <application moreinfo="none">Courier</application> mail server
TCP server daemon</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis sepchar=" ">
      <command moreinfo="none">couriertcpd</command>
      <arg choice="opt" rep="norepeat">-pid=<replaceable>pidfile</replaceable></arg>
      <arg rep="repeat" choice="opt"><replaceable>option</replaceable></arg>
      <arg choice="req" rep="norepeat"><replaceable>list</replaceable></arg>
      <arg choice="req" rep="norepeat"><replaceable>program</replaceable></arg>
      <arg choice="req" rep="repeat"><replaceable>arg</replaceable></arg>
    </cmdsynopsis>

    <cmdsynopsis sepchar=" ">
      <command moreinfo="none">couriertcpd</command>
      <arg choice="req" rep="norepeat">-pid=<replaceable>pidfile</replaceable></arg>
      <arg choice="req" rep="norepeat">-stop</arg>
    </cmdsynopsis>

    <cmdsynopsis sepchar=" ">
      <command moreinfo="none">couriertcpd</command>
      <arg choice="req" rep="norepeat">-pid=<replaceable>pidfile</replaceable></arg>
      <arg choice="req" rep="norepeat">-restart</arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>DESCRIPTION</title>

    <para>
<command moreinfo="none">couriertcpd</command> accepts incoming network connections, and runs
<command moreinfo="none">program</command> after establishing each network connection. The
<command moreinfo="none">program</command>'s standard input and output are set to the network
connection.</para>

    <para>
<replaceable>list</replaceable> is a comma-separated list of TCP port numbers
where incoming
connections are created. <command moreinfo="none">program</command> is the program to
run. If <command moreinfo="none">program</command> requires any
arguments, they are specified on the command line, after
<command moreinfo="none">program</command> itself.</para>

    <para>
Before running <command moreinfo="none">program</command>, <command moreinfo="none">couriertcpd</command>
initializes
several environment variables that describe the network connection. The
environment inherited by <command moreinfo="none">program</command> will be the environment
inherited by <command moreinfo="none">couriertcpd</command>, plus any additional environment
variables initialized by <command moreinfo="none">couriertcpd</command>. It is also possible to
reject certain network connections. Several options are available to specify
which network connections will be rejected.</para>

  </refsect1>

  <refsect1>
    <title>OPTIONS</title>

    <variablelist>
      <varlistentry>
	<term>-access=<replaceable>filename</replaceable></term>
	<listitem>
	  <para>
Specifies an optional access
file. The access file lists the IP addresses from which connections
should be accepted or rejected. The access file is also used to
initialize environment variables based on the IP address of the
connection. <replaceable>filename</replaceable> is a GDBM or DB database file
that's usually
created by a script from one or more text files. See "ACCESS FILE" below for
more information.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-accesslocal</term>
	<listitem>
	  <para>
Lookup the local interface IP and port in the access file, in addition to
looking up the remote IP. This gives a mechanism for setting environment
variables depending on which IP address and/or port the client connected to.
In the access file, "1.2.3.4.25" matches connections to IP address 1.2.3.4
port 25; "1.2.3.4" matches connections to IP address 1.2.3.4 on any port;
and "*.25" matches connections to port 25 on any IP address.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-address=<replaceable>n.n.n.n</replaceable></term>
	<listitem>
	  <para>
Accept network connections only to IP address
<replaceable>n.n.n.n</replaceable>. If not specified,
<command moreinfo="none">couriertcpd</command>
accepts connections to any IP address that the system accepts connections
on. If the system has multiple network interfaces with separate IP
addresses, this option makes <command moreinfo="none">couriertcpd</command> accept connections
only to one specific IP address. Most systems have multiple network
interfaces: the loopback interface, plus the local network interface, so
that <literal moreinfo="none">-address=127.0.0.1</literal> accepts connections only from the
local system. When multiple port numbers are specified, it is also
possible to selectively bind different network addresses to each port
number when <replaceable>list</replaceable> specifies more than one port
number. See "<ulink url="#list">Multiple port list</ulink>" below for more
information.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-block=<replaceable>zone</replaceable>[,<replaceable>var</replaceable>[/<replaceable>n.n.n.n</replaceable>][,<replaceable>msg</replaceable>]]</term>
	<listitem>
	  <para>
Initialize the environment variable <replaceable>var</replaceable> if both of
the following
conditions are true: <replaceable>var</replaceable> is not already initialized;
the connecting IP address can be found in a DNS-based list. See
DNS ACCESS LISTS, below.
Multiple <option>-block</option> options can be used.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
        <term>-denymsg=<replaceable>text</replaceable></term>
        <listitem>
           <para>
Specifies an optional message to be returned to the client if the
<parameter moreinfo="none">-access</parameter> option rejects them.
The default is to drop the TCP
connection without sending back any messages.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
	<term>-drop=<replaceable>var</replaceable></term>
	<listitem>
	  <para>
	    If the environment variable <replaceable>var</replaceable> is set to
	    a nonempty value, terminate immediately. Do not run the
	    <command moreinfo="none">program</command> to handle the connection.
	    See DNS ACCESS LISTS, below, for more information.
	    <replaceable>var</replaceable> defaults to
	    <quote>BLOCK</quote>, if not specified.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-group=<replaceable>group</replaceable></term>
	<listitem>
	  <para>
Set <command moreinfo="none">couriertcpd</command>'s its
group ID. <replaceable>group</replaceable> may be specified numerically, or by
its name. Only the superuser may use <option>-group</option>.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-listen=<replaceable>n</replaceable></term>
	<listitem>
	  <para>
Length of the queue which holds pending connections.
<replaceable>n</replaceable> is a number. If not specified, the system default
is used.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-maxperc=<replaceable>n</replaceable></term>
	<listitem>
	  <para>
Maximum number of connections accepted
from the same C network block. Using this option is recommended, because
connection slots are limited. Without this option, the same C network
block can potentially use up all available connection slots.</para>
	</listitem>
      </varlistentry>

  <varlistentry>
	<term>-maxperip=<replaceable>n</replaceable></term>
	<listitem>
	  <para>
Maximum number of connections
accepted from the same IP address.  Use both the <option>-maxperc</option>
and <option>-maxperip</option> options to fine tune connection limits. For
example, when <command moreinfo="none">couriertcpd</command> is listening on the SMTP port it
makes sense to set an upper limit on the number of connections from the
same C block. Domains that send a large amount of mail often have
multiple servers sending outbound mail from the same C block, so it makes
sense to set limits on individual C blocks. On the other hand, if
<command moreinfo="none">couriertcpd</command> is listening on the POP3 port it makes more
sense to set limits on individual IP addresses.  If a C block of
addresses is assigned to a dialup modem pool, it is certainly possible to
have many IP addresses within the same C block have connections to the
POP3 server at the same time.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-maxprocs=<replaceable>n</replaceable></term>
	<listitem>
	  <para>
Maximum number of connection slots,
or the maximum number of processes started. This effectively specifies
the maximum number of connections accepted at the same time. After the
maximum number of connections has been opened, <command moreinfo="none">couriertcpd</command>
waits for an existing connection to close, before accepting any more
connections.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-warn=<replaceable>n</replaceable></term>
	<listitem>
	  <para>
Log a <errorcode moreinfo="none">LOG_WARNING</errorcode> message to
syslog when the number of active processes exceeds
<replaceable>n</replaceable>.  The default is 90% of
<replaceable>maxprocs</replaceable>. <command moreinfo="none">couriertcpd</command> logs a
<errorcode moreinfo="none">LOG_ALERT</errorcode> syslog message when the number of active
processes
reaches the maximum.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-nodnslookup</term>
	<listitem>
	  <para>
Do not look up the hostname associated with connecting IP address and the
local addres, do not initialize the
<envar>TCPREMOTEHOST</envar> or <envar>TCPLOCALHOST</envar> environment
variables (see below).</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-noidentlookup</term>
	<listitem>
	  <para>
Do not perform an <emphasis>ident</emphasis>
lookup, and do not initialize the <envar>TCPREMOTEINFO</envar> environment
variable.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-pid=<replaceable>filename</replaceable></term>
	<listitem>
	  <para>
If given, <command moreinfo="none">couriertcpd</command> puts itself into the background
and saves its process ID in this file, usually
somewhere in <filename moreinfo="none">/var/run</filename>.</para>
<para>This option must also be present when using the <option>-restart</option>
and <option>-stop</option> options.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-restart</term>
	<listitem>
	  <para>
Send a SIGHUP to an existing <command moreinfo="none">couriertcpd</command> process.  Specify
the same <option>-pid</option>
argument as the one that was used to start <command moreinfo="none">couriertcpd</command>. The
process ID is read from the <option>-pid</option> file, and the
<command moreinfo="none">couriertcpd</command> receives a SIGHUP signal.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-stderr=socket</term>
	<listitem>
	  <para>
Set <command moreinfo="none">program</command>'s standard error to
the network connection, just like its standard input and output.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-stderr=<replaceable>logfile</replaceable></term>
	<listitem>
	  <para>
Set <command moreinfo="none">program</command>'s standard
error to the specified file, <filename moreinfo="none">logfile</filename>.
The file is created, if necessary, and is opened in append mode.</para>
	</listitem>
      </varlistentry>


      <varlistentry>
	<term>-stderrlogger=<replaceable>logprogram</replaceable></term>
	<listitem>
	  <para>
Set <command moreinfo="none">program</command>'s
standard error to a pipe, which is read by <command moreinfo="none">logprogram</command>.
Only one instance of
<replaceable>logger</replaceable> is started, which receives standard error
from every
instance of <command moreinfo="none">program</command>.
The specified <replaceable>logger</replaceable> is executed with
the output end of the stderr pipe connected as standard input.
<replaceable>logprogram</replaceable> is
executed with one argument - <command moreinfo="none">program</command>'s name.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-stderrloggername=name</term>
	<listitem>
	  <para>
Use <replaceable>name</replaceable> as the argument to
<replaceable>logprogram</replaceable>, instead of the
<command moreinfo="none">program</command>'s name.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-stop</term>
	<listitem>
	  <para>
Stop (kill) an existing <command moreinfo="none">couriertcpd</command>
process.  Specify the same <option>-pid</option> argument as the one that was
used to start <command moreinfo="none">couriertcpd</command>. The process ID is read from the
<option>-pid</option> file, and the <command moreinfo="none">couriertcpd</command> process is
killed. All child processes of <command moreinfo="none">couriertcpd</command> will receive a
SIGTERM signal.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>-user=<replaceable>user</replaceable></term>
	<listitem>
	  <para>
Set <command moreinfo="none">couriertcpd</command>'s user
ID. Also, the group ID is set to the user's group ID. Using both
<option>-group</option> and <option>-user</option> is not necessary. Only the
superuser can specify <option>-user</option>.</para>
	</listitem>
      </varlistentry>
    </variablelist>

  </refsect1>

  <refsect1>

    <title>MULTIPLE PORT LIST</title>

    <anchor id="list"/>

    <para>
The <replaceable>list</replaceable> argument can be a comma-separated list of
multiple port
numbers. <command moreinfo="none">couriertcpd</command> will create network connections on any
listed port. Each port number can be optionally specified as "address.port",
for example:</para>

    <informalexample>
      <programlisting format="linespecific">
couriertcpd -pid=/var/run/smtp.pid 127.0.0.1.25,999 <replaceable>program</replaceable>
</programlisting>
    </informalexample>

<para>
This instance accepts network connections to either port 25 or port 999,
however connections on port 25 are created only on the IP address 127.0.0.1,
the loopback interface.</para>

    <para>Whenever an IP address is not specified, network connections are
accepted
to any IP address (called "wildcarding"). On IPv6-capable systems,
<command moreinfo="none">couriertcpd</command> will attempt to create two incoming network
connection ports, if an IP address is not specified. After creating the first
port as an IPv6 wildcard port, couriertcpd will then attept to create an IPv4
wildcard port, with the same port number. Some BSD-derived systems must use
separate IPv6 and IPv4 wildcard ports to create incoming network connections.
Most other systems only need an IPv6 port to create both IPv6 and IPv4
incoming network connections. <command moreinfo="none">couriertcpd</command> quietly ignores a
failure to create an IPv4 wildcard port, as long as an IPv6 wildcard was
succesfully created.</para>

    <para>
The <option>-address</option> option can be used to default a specific IP
address for every listed port number.  For example:</para>

    <informalexample>
      <programlisting format="linespecific">
couriertcpd -pid=/var/run/smtp.pid 127.0.0.1.25,127.0.0.1.999 <replaceable>program</replaceable>
</programlisting>
    </informalexample>

<para>
and</para>

    <informalexample>
      <programlisting format="linespecific">
couriertcpd -pid=/var/run/smtp.pid -address=127.0.0.1 25,999 <replaceable>program</replaceable>
</programlisting>
    </informalexample>

<para>
will create network connections on ports 25 and 999 of the IP address
127.0.0.1.</para>

  </refsect1>

  <refsect1>

    <title>ACCESS FILE</title>

    <para>
The access file lists IP addresses that <command moreinfo="none">couriertcpd</command> will
accept or reject connections from. An access file is optional. Without an
access file <command moreinfo="none">couriertcpd</command> accepts a connection from any IP
address.</para>

    <para>
Both IPv4 and IPv6 addresses can be specified, if IPv6 support is
available. A non-standard syntax is currently used to specify IPv6 addresses.
This is subject to change in the near future. IPv6 support is currently
considered to be experimental.</para>

    <para>
The access file is a binary database file that's usually created by a
script, such as
<ulink url="makesmtpaccess.html"><citerefentry><refentrytitle>makesmtpaccess</refentrytitle><manvolnum>8</manvolnum></citerefentry></ulink>,
from one or more plain text
files. Blank lines in the text file are ignored. Lines that start with the #
character are also ignored.</para>

    <refsect2>
      <title>Rejecting and accepting connections by IP address</title>

      <para>
The following line instructs <command moreinfo="none">couriertcpd</command> to reject all
connections from an IP address range:</para>

      <informalexample>
	<programlisting format="linespecific">
netblock&lt;tab&gt;deny
</programlisting>
      </informalexample>

      <para><replaceable>netblock</replaceable> is an IP address, such as
<literal moreinfo="none">192.68.0.2</literal>. <token>&lt;tab&gt;</token>
is the ASCII tab character. There MUST be exactly one tab character after the
IP address and the word "deny".</para>

      <para>
You can also block connections from an entire network C block:</para>

      <informalexample>
	<programlisting format="linespecific">
192.68.0&lt;tab&gt;deny
</programlisting>
      </informalexample>

      <para>
This blocks connections from IP addresses <literal moreinfo="none">192.68.0.0</literal>
through <literal moreinfo="none">192.68.0.255</literal>.
Blocking connections from an entire B or A network block works the same
way.</para>

<para>
Use the word "<literal moreinfo="none">allow</literal>" instead of "<literal moreinfo="none">deny</literal>"
to explicitly allow connections
from that IP address or netblock. For example:</para>

      <informalexample>
	<programlisting format="linespecific">
192.68.0&lt;tab&gt;deny
192.68.0.10&lt;tab&gt;allow
</programlisting>
      </informalexample>

      <para>
This blocks all connections from <literal moreinfo="none">192.68.0.0</literal> to
<literal moreinfo="none">192.68.0.255</literal> except for <literal moreinfo="none">192.68.0.10</literal>.
These two lines can occur in any order. <command moreinfo="none">couriertcpd</command>
always uses the line with the most specific IP address.</para>

      <para>
If the IP address of the connection is not found in the access file the
connection is accepted by default. The following line causes unlisted
connections to be rejected:</para>

      <informalexample>
	<programlisting format="linespecific">
*&lt;tab&gt;deny
</programlisting>
      </informalexample>

    </refsect2>

    <refsect2>
      <title>IPv6 addresses</title>

      <note>
	<para>
IPv6 support in the access file is experimental, and is subject to
change in a future release.  The following syntax is subject to change at any
time.</para>
      </note>

      <para>
The access file can also specify IPv6 addresses, if IPv6 support is
available.  The existing IPv4 address format is used for IPv6-mapped IPv4
addresses, and no changes are required.  For all other IPv6 addresses use the
following format:</para>

      <informalexample>
	<programlisting format="linespecific">
:hhhh:hhhh:hhhh:hhhh:hhhh:hhhh:hhhh:hhhh&lt;tab&gt;<replaceable>action</replaceable>
</programlisting>
      </informalexample>

<para>
The IPv6 address must begin with :. The initial : character is not really
a part of the IPv6 address, it is only used to designate this record as an
IPv6 address, allowing an access file to contain a mixture of IPv4 and IPv6
addresses. The IPv6 address follows the initial : character, and it must be
spelled out <emphasis>using zero-padded lowercase hexadecimal
digits</emphasis>.
For example:</para>

      <informalexample>
	<programlisting format="linespecific">
:0000:0000:0000:0000:0000:f643:00a2:9354&lt;tab&gt;deny
</programlisting>
      </informalexample>

      <para>
Netblocks must be specified using even-word boundaries only:</para>

      <informalexample>
	<programlisting format="linespecific">
:3ffe&lt;tab&gt;deny
</programlisting>
      </informalexample>

      <para>
This will deny entire 3ffe::/16 (6bone network, which is phased out).
</para>

      <informalexample>
	<programlisting format="linespecific">
:2002:c0a8&lt;tab&gt;deny
</programlisting>
      </informalexample>

      <para>
This will deny 2002:c0a8::/32 (6to4 addresses derived from private
address space).</para>

    </refsect2>

    <refsect2>
      <title>Setting environment variables</title>

      <para>
<literal moreinfo="none">allow</literal> can be optionally followed by a list of environment
variable
assignments, separated by commas. The environment variables are set before
executing <command moreinfo="none">program</command> or checking
access lists (see below). For example:</para>

      <informalexample>
	<programlisting format="linespecific">
192.68.0&lt;tab&gt;allow,RELAYCLIENT
192.68.0.10&lt;tab&gt;allow,RELAYCLIENT,SIZELIMIT=1000000
</programlisting>
      </informalexample>

      <para>
This sets <envar>RELAYCLIENT</envar> environment variable for connections
from the <literal moreinfo="none">192.68.0</literal> block. In addition to that, the <envar>SIZELIMIT</envar>
environment variable is set to <literal moreinfo="none">1000000</literal> if the connection comes from the IP
address <literal moreinfo="none">192.68.0.10</literal>.</para>

      <para>
Note that <envar>RELAYCLIENT</envar> must be explicitly specified for the IP
address <literal moreinfo="none">192.68.0.10</literal>. The first line is NOT used for
connections from this IP
address. <command moreinfo="none">couriertcpd</command> only reads one entry from the access
file, the entry for the most specific IP address.</para>

    </refsect2>

    <refsect2>

      <title>DNS ACCESS LISTS</title>

      <para>An alternative to listing banned IP addresses is to use an external
DNS-based IP access list.</para>

      <para>
There is no provision to support IPv6-based lists, because none yet
exist. IPv6-based access list support will be added in the future.</para>

      <para>
<command moreinfo="none">couriertcpd</command>'s default configuration
does not automatically reject connections from
any IP address listed on a DNS-based list. If the connecting IP address is
listed couriertcpd simply sets an environment variable. It's up to the
<command moreinfo="none">program</command>, run by <command moreinfo="none">couriertcpd</command>,
to read the environment
variable and choose what to do if the environment variable is set.</para>

      <para>Please note that if the environment variable is already set,
<command moreinfo="none">couriertcpd</command> will NOT search the access list. This can be used
to override the access list where <command moreinfo="none">program</command> only recognizes the
access list if the environment variable is not empty. By setting the
environment variable to an empty string in the access file (see above), you
can override access lists for selected IP addresses.</para>

      <para>
The <option>-block</option> option queries a DNS list for each connecting IP
address. The only required argument to <option>-block</option> is the DNS zone
that is used to publish thelist. The name of the zone can optionally be
followed by a comma and the name of the environment variable to set if the
DNS list includes the IP address.  <command moreinfo="none">couriertcpd</command> sets the
environment variable <envar>BLOCK</envar> if you do not specify the name
yourself.</para>

      <para>
The name of the environment variable can be optionally followed by a slash
and an IP address. Normally <command moreinfo="none">couriertcpd</command> sets the environment
variable if the access list includes any A record entry for the specified IP
address. Some access lists may offer additional information by returning one of
several possible A records. If the name of the environment variable is
followed by a slash and an IP address, the environment variable will be
initialized only if the access list includes an A record containing the
indicated IP address.</para>

      <para>
The contents of the environment variable will be the contents of any TXT
record for the listed IP address. <replaceable>var</replaceable>[/<replaceable>n.n.n.n</replaceable>] can be
optionally followed by a comma and a text message, which will be used instead
of the TXT record. The text message may include a single @ character
somewhere in it, which will be replaced by the listed IP address.</para>


      <para>
	When the <option>-drop</option> option is given in addition to
	<option>-block</option>,
	<command moreinfo="none">couriertcpd</command> drops the connection, rather than
	running the <command moreinfo="none">program</command>.
	First, all <option>-block</option> options are processed and the
	environment variables are set, based on the results of any matching
	DNS lookups. The <option>-drop</option> gets processed after all
	DNS lookups. <option>-drop</option> takes a list of comma-separated
	environment variables (if not specified, <envar>BLOCK</envar> is the
	default list). If any environment variable named by the
	<option>-drop</option> option is set to a non-empty string,
	<command moreinfo="none">couriertcpd</command> drops the connection instead of
	executing the <command moreinfo="none">program</command>.
      </para>
    </refsect2>

    <refsect2>
      <title>MULTIPLE DNS LISTS</title>

      <para>
Multiple <option>-block</option> options can be used. The connecting IP address
gets looked up in multiple access lists. This is implemented as
follows.</para>

      <para>
<command moreinfo="none">couriertcpd</command> processes all <option>-block</option> options
one at
a time. If the indicated environment variable is already set,
<command moreinfo="none">couriertcpd</command> skips the DNS list lookup (this is also true if
only one <option>-block</option> option is specified). Therefore, if multiple
<option>-block</option> options are used, and an IP address is found in the
first
access list, the remaining lists that use the same environment variable
will not be checked. But other lists that use a different environment
variable WILL be checked.</para>

      <para>
The same <replaceable>zone</replaceable> can be specified more than once,
with different
environment variables and different IP addresses. For example:</para>

      <informalexample>
<programlisting format="linespecific">
couriertcpd -block=block.example.org,BLOCK1/127.0.0.2 \
            -block=block.example.org,BLOCK2/127.0.0.3
</programlisting>
      </informalexample>

      <para>
If the specified access list contains an A record for the listed address,
and the A record contains the IP address 127.0.0.2,
<command moreinfo="none">couriertcpd</command>
initializes the <envar>BLOCK1</envar> environment variable. If the A record
contains the IP address 127.0.0.3, <command moreinfo="none">couriertcpd</command> initializes
<envar>BLOCK2</envar>. If both records are present, both variables are
initialized.</para>

<para>
<command moreinfo="none">couriertcpd</command> uses the following logic to determine what kind
of DNS query to issue:</para>

      <para>
If neither the IP address, nor <replaceable>msg</replaceable> is specified,
<command moreinfo="none">couriertcpd</command> will query for existence of TXT records, for the
IP address.</para>

      <para>
If only <replaceable>msg</replaceable> is specified,
<command moreinfo="none">couriertcpd</command> looks up the
existence of A records, for the IP address.</para>

      <para>
If <replaceable>/n.n.n.n</replaceable> is used, and
<replaceable>msg</replaceable> is not specified for at least
one <option>-block</option> option for this same zone,
<command moreinfo="none">couriertcpd</command>
will query for existence of ANY records, which should return both TXT and all
the A records for this IP address.</para>

      <para>
If <replaceable>/n.n.n.n</replaceable> is used, and
<replaceable>msg</replaceable> is specified for every
<option>-block</option> option for this same zone,
<command moreinfo="none">couriertcpd</command> will
query for existence of A records only.</para>

    </refsect2>
  </refsect1>

  <refsect1>
    <title>ENVIRONMENT VARIABLES</title>

    <para>
<command moreinfo="none">couriertcpd</command> also initializes the following environment
variables prior to running <command moreinfo="none">program</command>:</para>
    <variablelist>
      <varlistentry>
	<term>TCPLOCALHOST</term>
	<listitem>
	  <para>
The name of the host on the local end of
the network connection, looked up in DNS. <envar>TCPLOCALHOST</envar> will
not be set if the IP address of the network connection's local end cannot
be found in DNS, or if <option>-nodnslookup</option> option is specified.
<envar>TCPLOCALHOST</envar> will be set to the string
<errorcode moreinfo="none">softdnserr</errorcode> if the DNS lookup fails with a temporary
error
(so you cannot tell if the IP address has a valid host name associated
with it), or if the reverse and forward DNS lookups do not match.
<envar>TCPLOCALHOST</envar> will not be set if the reverse DNS lookup fails
completely.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>TCPLOCALIP</term>
	<listitem>
	  <para>
The IP address of the local end of the network connection.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>TCPLOCALPORT</term>
	<listitem>
	  <para>
Rhe number of the port of the local end of the network connection.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>TCPREMOTEHOST</term>
	<listitem>
	  <para>
The hostname of the connecting host. Like
<envar>TCPLOCALHOST</envar>, but for the connecting IP address.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>TCPREMOTEIP</term>
	<listitem>
	  <para>
Connecting IP address.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>TCPREMOTEINFO</term>
	<listitem>
	  <para>
Identification string received from the
IDENT server on the remote IP address. Not set if the IDENT server
returned an error, or if the <option>-noidentlookup</option> option was
specified.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>TCPREMOTEPORT</term>
	<listitem>
	  <para>
TCP port of the remote end of the network connection.</para>
	</listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>SEE ALSO</title>

    <para>
<ulink url="courier.html"><citerefentry><refentrytitle>courier</refentrytitle><manvolnum>8</manvolnum></citerefentry></ulink>.</para>
  </refsect1>
</refentry>
