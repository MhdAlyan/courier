<!-- Copyright 2002-2003 Double Precision, Inc.  See COPYING for -->
<!-- distribution information. -->

  <refentry id="account-libmail-addmessage">
    <refmeta>
      <refentrytitle>mail::ACCOUNT::addMessage</refentrytitle>
      <manvolnum>3x</manvolnum>
      <refmiscinfo class='software'>
        <productname class='copyright'>Cone</productname>
      </refmiscinfo>
    </refmeta>

    <refnamediv>
      <refname>mail::ACCOUNT::addMessage</refname>
      <refpurpose>Add a message to a folder</refpurpose>
    </refnamediv>

    <refsynopsisdiv>
      <literallayout>
&libmail-includesynch;
#include &lt;libmail/addmessage.H&gt;

mail::ACCOUNT *mail;

class myAddMessagePull : public mail::addMessagePull {

public:
    std::string getMessageContents();
};

time_t messageDate;
mail::messageInfo newMessageInfo;
myAddMessagePull message;

    message.messageDate=messageDate;
    message.newMessageInfo=newMessageInfo;
</literallayout>

      <funcsynopsis>
	<funcprototype>
	  <funcdef>bool ok=mail-&gt;<function>addMessage</function></funcdef>
	  <paramdef>const mail::folder *<parameter>folder</parameter></paramdef>
	  <paramdef><parameter>message</parameter></paramdef>
	</funcprototype>
      </funcsynopsis>
      &libmail-accterrmsg;
    </refsynopsisdiv>
    <refsect1>
      <title>USAGE</title>

      <para>
This method inserts a message into a folder.
<parameter>folder</parameter> specifies the folder where the message
is added to, which may or may not be the currently open folder.</para>

      &libmail-addmessage;

      <para>
The application may set the following
<structname>mail::addMessagePull</structname> fields before invoking this
method.
If not initialized, the following fields will be set to their default
values.</para>

      <variablelist>
	<varlistentry>
	  <term>messageDate</term>
	  <listitem>
	    <para>
The message's arrival timestamp, which is retrieved
by
<link linkend="account-getmessageenvelope"><citerefentry>
		  <refentrytitle>mail::ACCOUNT::getMessageEnvelope</refentrytitle>
		  <manvolnum>3x</manvolnum></citerefentry></link>,
which places it in the <structfield>arrivalDate</structfield> field.</para>

	    <note>
	      <para>
This timestamp does not necessarily have to be the same as the
timestamp in the message's <literal>Date:</literal> header.</para>
	    </note>
	  </listitem>
	</varlistentry>

	<varlistentry>
	  <term>messageInfo</term>
	  <listitem>
	    <para>
The message flags, as returned by
<link linkend="account-getfolderindexinfo"><citerefentry>
		  <refentrytitle>mail::ACCOUNT::getFolderIndexInfo</refentrytitle>
		  <manvolnum>3x</manvolnum></citerefentry></link>.</para>

	    <note>
	      <para>
The contents of <structfield>uid</structfield>, the message's unique ID,
are ignored, only the message flags in <structfield>messageInfo</structfield>
are read.
The message gets automatically assigned a new unique ID when it gets added
to the folder.</para>
	    </note>
	  </listitem>
	</varlistentry>
      </variablelist>

    </refsect1>

    <refsect1>
      <title>Return Codes</title>

      &libmail-account-return;

    </refsect1>

    <refsect1>
      <title>SEE ALSO</title>

      <para>
<link linkend="account-checknewmail"><citerefentry>
	    <refentrytitle>mail::ACCOUNT::checkNewMail</refentrytitle>
	    <manvolnum>3x</manvolnum></citerefentry></link>.</para>
    </refsect1>
  </refentry>

